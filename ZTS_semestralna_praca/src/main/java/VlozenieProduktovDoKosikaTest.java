// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.Keys;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.*;

public class VlozenieProduktovDoKosikaTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void vlozenieproduktovdokosika() {
    String email = "mizukage295@gmail.com";
    String heslo = "zts2023sem";

    driver.get("https://www.martinus.sk/");
    driver.manage().window().maximize();
    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    wait.until(ExpectedConditions.elementToBeClickable(By.id("CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll"))).click();
    driver.findElement(By.cssSelector(".header-user__name")).click();
    driver.findElement(By.id("email")).sendKeys(email);
    driver.findElement(By.cssSelector(".mj-next-button")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".mj-next-button"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.id("heslo")).sendKeys(heslo);
    driver.findElement(By.id("heslo")).sendKeys(Keys.ENTER);
    driver.findElement(By.linkText("Knihy")).click();
    driver.findElement(By.linkText("Detektívky, trilery a horory")).click();
    js.executeScript("window.scrollTo(0,300)");
    driver.findElement(By.cssSelector(".listing__item:nth-child(1) .listing__item__title > .link")).click();
    vars.put("prvyProdukt", driver.findElement(By.cssSelector(".product-detail__title")).getText());
    driver.findElement(By.cssSelector(".flex-1 > form .btn--primary")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".flex-1 > form .btn--primary"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.navigate().back();

    driver.findElement(By.cssSelector(".listing__item:nth-child(3) .listing__item__title > .link")).click();
    vars.put("druhyProdukt", driver.findElement(By.cssSelector(".product-detail__title")).getText());
    driver.findElement(By.cssSelector(".flex-1 > form .btn--primary")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".flex-1 > form .btn--primary"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.navigate().back();
    driver.findElement(By.cssSelector(".header-btn > .fa-basket-shopping")).click();
    driver.findElement(By.cssSelector(".header-user__name")).click();
    driver.findElement(By.linkText("Odhlásiť")).click();
    driver.findElement(By.id("email")).click();
    driver.findElement(By.id("email")).sendKeys(email);
    driver.findElement(By.cssSelector(".mj-next-button")).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".mj-next-button"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.id("heslo")).sendKeys(heslo);
    driver.findElement(By.id("heslo")).sendKeys(Keys.ENTER);
    {
      WebElement element = driver.findElement(By.cssSelector(".swiper-slide-next > a > img"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".header__cart > .btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".fa-basket-shopping")).click();
    assertThat(driver.findElement(By.linkText("Konečne normálna vražda")).getText(), is("Konečne normálna vražda"));
    assertThat(driver.findElement(By.linkText("Jed v šampanskom")).getText(), is("Jed v šampanskom"));
    {
      WebElement element = driver.findElement(By.cssSelector(".mj-remove-product-2251517 path"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector(".fa-basket-shopping")).click();
    wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    WebElement element = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".mj-remove-product-2251517")));
    element.click();
    driver.findElement(By.cssSelector(".fa-basket-shopping")).click();
    {
      element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      element = driver.findElement(By.cssSelector(".fa-trash-can-xmark"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.cssSelector(".fa-trash-can-xmark")).click();
    {
      element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    driver.findElement(By.cssSelector(".header-user__name")).click();
    driver.findElement(By.linkText("Odhlásiť")).click();
    driver.quit();
  }
}
