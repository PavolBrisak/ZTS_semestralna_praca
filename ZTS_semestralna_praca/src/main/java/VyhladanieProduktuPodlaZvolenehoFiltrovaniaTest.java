// Generated by Selenium IDE
import org.junit.Test;
import org.junit.Before;
import org.junit.After;

import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import static org.hamcrest.CoreMatchers.containsString;
import static org.junit.Assert.*;
import static org.hamcrest.CoreMatchers.is;
import static org.hamcrest.core.IsNot.not;
import org.openqa.selenium.By;
import org.openqa.selenium.WebDriver;
import org.openqa.selenium.chrome.ChromeDriver;
import org.openqa.selenium.Dimension;
import org.openqa.selenium.WebElement;
import org.openqa.selenium.interactions.Actions;
import org.openqa.selenium.JavascriptExecutor;
import org.openqa.selenium.support.ui.ExpectedConditions;
import org.openqa.selenium.support.ui.WebDriverWait;

import java.time.Duration;
import java.util.*;

public class VyhladanieProduktuPodlaZvolenehoFiltrovaniaTest {
  private WebDriver driver;
  private Map<String, Object> vars;
  JavascriptExecutor js;
  @Before
  public void setUp() {
    driver = new ChromeDriver();
    js = (JavascriptExecutor) driver;
    vars = new HashMap<String, Object>();
  }
  @After
  public void tearDown() {
    driver.quit();
  }
  @Test
  public void vyhladanieproduktupodlazvolenehofiltrovania() {
    driver.get("https://www.martinus.sk/");
    driver.manage().window().maximize();
    WebDriverWait wait = new WebDriverWait(driver, Duration.ofSeconds(10));
    wait.until(ExpectedConditions.elementToBeClickable(By.id("CybotCookiebotDialogBodyLevelButtonLevelOptinAllowAll"))).click();
    {
      WebElement element = driver.findElement(By.cssSelector(".swiper-slide-fully-visible > a > img"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    {
      WebElement element = driver.findElement(By.tagName("body"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element, 0, 0).perform();
    }
    {
      WebElement element = driver.findElement(By.cssSelector(".header__cart > .btn"));
      Actions builder = new Actions(driver);
      builder.moveToElement(element).perform();
    }
    driver.findElement(By.linkText("Knihy")).click();
    driver.findElement(By.linkText("Komiksy")).click();

    WebElement checkboxLanguages = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector("#filter-languages .checkbox:nth-child(2) > .radiocheck__control")));
    js.executeScript("arguments[0].click();", checkboxLanguages);
    wait.until(ExpectedConditions.stalenessOf(checkboxLanguages));

    WebElement productLink = wait.until(ExpectedConditions.elementToBeClickable(By.cssSelector(".listing__item:nth-child(1) .listing__item__title > .link")));
    js.executeScript("arguments[0].click();", productLink);

    js.executeScript("window.scrollTo(0,1500)");

    List<WebElement> colDivs = driver.findElements(By.cssSelector(".col--6.col--s-4"));

    for (WebElement colDiv : colDivs) {
      WebElement lineMediumDiv = colDiv.findElement(By.cssSelector(".line-medium"));
      if (lineMediumDiv.isDisplayed() && lineMediumDiv.getText().contains("Jazyk")) {
        WebElement link = lineMediumDiv.findElement(By.tagName("a"));
        assertThat(link.getText(), containsString("angličtina"));
        break;
      }
    }

    driver.navigate().back();
    driver.findElement(By.cssSelector(".listing__item:nth-child(9) .listing__item__title > .link")).click();
    js.executeScript("window.scrollTo(0,1600)");
    colDivs = driver.findElements(By.cssSelector(".col--6.col--s-4"));

    for (WebElement colDiv : colDivs) {
      WebElement lineMediumDiv = colDiv.findElement(By.cssSelector(".line-medium"));
      if (lineMediumDiv.isDisplayed() && lineMediumDiv.getText().contains("Jazyk")) {
        WebElement link = lineMediumDiv.findElement(By.tagName("a"));
        assertThat(link.getText(), containsString("angličtina"));
        break;
      }
    }
    driver.quit();
  }
}
